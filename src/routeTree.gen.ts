/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as CartRouteImport } from './routes/cart'
import { Route as IndexRouteImport } from './routes/index'
import { Route as OrdersIndexRouteImport } from './routes/orders/index'
import { Route as MenuIndexRouteImport } from './routes/menu/index'
import { Route as MenuSlugRouteImport } from './routes/menu/$slug'

const CartRoute = CartRouteImport.update({
  id: '/cart',
  path: '/cart',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const OrdersIndexRoute = OrdersIndexRouteImport.update({
  id: '/orders/',
  path: '/orders/',
  getParentRoute: () => rootRouteImport,
} as any)
const MenuIndexRoute = MenuIndexRouteImport.update({
  id: '/menu/',
  path: '/menu/',
  getParentRoute: () => rootRouteImport,
} as any)
const MenuSlugRoute = MenuSlugRouteImport.update({
  id: '/menu/$slug',
  path: '/menu/$slug',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/cart': typeof CartRoute
  '/menu/$slug': typeof MenuSlugRoute
  '/menu': typeof MenuIndexRoute
  '/orders': typeof OrdersIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/cart': typeof CartRoute
  '/menu/$slug': typeof MenuSlugRoute
  '/menu': typeof MenuIndexRoute
  '/orders': typeof OrdersIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/cart': typeof CartRoute
  '/menu/$slug': typeof MenuSlugRoute
  '/menu/': typeof MenuIndexRoute
  '/orders/': typeof OrdersIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/cart' | '/menu/$slug' | '/menu' | '/orders'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/cart' | '/menu/$slug' | '/menu' | '/orders'
  id: '__root__' | '/' | '/cart' | '/menu/$slug' | '/menu/' | '/orders/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CartRoute: typeof CartRoute
  MenuSlugRoute: typeof MenuSlugRoute
  MenuIndexRoute: typeof MenuIndexRoute
  OrdersIndexRoute: typeof OrdersIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/cart': {
      id: '/cart'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/orders/': {
      id: '/orders/'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof OrdersIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/menu/': {
      id: '/menu/'
      path: '/menu'
      fullPath: '/menu'
      preLoaderRoute: typeof MenuIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/menu/$slug': {
      id: '/menu/$slug'
      path: '/menu/$slug'
      fullPath: '/menu/$slug'
      preLoaderRoute: typeof MenuSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CartRoute: CartRoute,
  MenuSlugRoute: MenuSlugRoute,
  MenuIndexRoute: MenuIndexRoute,
  OrdersIndexRoute: OrdersIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

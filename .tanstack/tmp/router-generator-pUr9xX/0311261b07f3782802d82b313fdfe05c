/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as OrdersIndexRouteImport } from './routes/orders/index'
import { Route as MenuIndexRouteImport } from './routes/menu/index'
import { Route as MenuSlugRouteImport } from './routes/menu/$slug'
import { Route as CheckoutPaymentRouteImport } from './routes/checkout/payment'
import { Route as CheckoutCartRouteImport } from './routes/checkout/cart'
import { Route as CheckoutLayoutRouteImport } from './routes/checkout/_layout'

const CheckoutRouteImport = createFileRoute('/checkout')()

const CheckoutRoute = CheckoutRouteImport.update({
  id: '/checkout',
  path: '/checkout',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const OrdersIndexRoute = OrdersIndexRouteImport.update({
  id: '/orders/',
  path: '/orders/',
  getParentRoute: () => rootRouteImport,
} as any)
const MenuIndexRoute = MenuIndexRouteImport.update({
  id: '/menu/',
  path: '/menu/',
  getParentRoute: () => rootRouteImport,
} as any)
const MenuSlugRoute = MenuSlugRouteImport.update({
  id: '/menu/$slug',
  path: '/menu/$slug',
  getParentRoute: () => rootRouteImport,
} as any)
const CheckoutPaymentRoute = CheckoutPaymentRouteImport.update({
  id: '/payment',
  path: '/payment',
  getParentRoute: () => CheckoutRoute,
} as any)
const CheckoutCartRoute = CheckoutCartRouteImport.update({
  id: '/cart',
  path: '/cart',
  getParentRoute: () => CheckoutRoute,
} as any)
const CheckoutLayoutRoute = CheckoutLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => CheckoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/checkout': typeof CheckoutLayoutRoute
  '/checkout/cart': typeof CheckoutCartRoute
  '/checkout/payment': typeof CheckoutPaymentRoute
  '/menu/$slug': typeof MenuSlugRoute
  '/menu': typeof MenuIndexRoute
  '/orders': typeof OrdersIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/checkout': typeof CheckoutLayoutRoute
  '/checkout/cart': typeof CheckoutCartRoute
  '/checkout/payment': typeof CheckoutPaymentRoute
  '/menu/$slug': typeof MenuSlugRoute
  '/menu': typeof MenuIndexRoute
  '/orders': typeof OrdersIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/checkout': typeof CheckoutRouteWithChildren
  '/checkout/_layout': typeof CheckoutLayoutRoute
  '/checkout/cart': typeof CheckoutCartRoute
  '/checkout/payment': typeof CheckoutPaymentRoute
  '/menu/$slug': typeof MenuSlugRoute
  '/menu/': typeof MenuIndexRoute
  '/orders/': typeof OrdersIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/checkout'
    | '/checkout/cart'
    | '/checkout/payment'
    | '/menu/$slug'
    | '/menu'
    | '/orders'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/checkout'
    | '/checkout/cart'
    | '/checkout/payment'
    | '/menu/$slug'
    | '/menu'
    | '/orders'
  id:
    | '__root__'
    | '/'
    | '/checkout'
    | '/checkout/_layout'
    | '/checkout/cart'
    | '/checkout/payment'
    | '/menu/$slug'
    | '/menu/'
    | '/orders/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CheckoutRoute: typeof CheckoutRouteWithChildren
  MenuSlugRoute: typeof MenuSlugRoute
  MenuIndexRoute: typeof MenuIndexRoute
  OrdersIndexRoute: typeof OrdersIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/checkout': {
      id: '/checkout'
      path: '/checkout'
      fullPath: '/checkout'
      preLoaderRoute: typeof CheckoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/orders/': {
      id: '/orders/'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof OrdersIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/menu/': {
      id: '/menu/'
      path: '/menu'
      fullPath: '/menu'
      preLoaderRoute: typeof MenuIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/menu/$slug': {
      id: '/menu/$slug'
      path: '/menu/$slug'
      fullPath: '/menu/$slug'
      preLoaderRoute: typeof MenuSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/checkout/payment': {
      id: '/checkout/payment'
      path: '/payment'
      fullPath: '/checkout/payment'
      preLoaderRoute: typeof CheckoutPaymentRouteImport
      parentRoute: typeof CheckoutRoute
    }
    '/checkout/cart': {
      id: '/checkout/cart'
      path: '/cart'
      fullPath: '/checkout/cart'
      preLoaderRoute: typeof CheckoutCartRouteImport
      parentRoute: typeof CheckoutRoute
    }
    '/checkout/_layout': {
      id: '/checkout/_layout'
      path: '/checkout'
      fullPath: '/checkout'
      preLoaderRoute: typeof CheckoutLayoutRouteImport
      parentRoute: typeof CheckoutRoute
    }
  }
}

interface CheckoutRouteChildren {
  CheckoutLayoutRoute: typeof CheckoutLayoutRoute
  CheckoutCartRoute: typeof CheckoutCartRoute
  CheckoutPaymentRoute: typeof CheckoutPaymentRoute
}

const CheckoutRouteChildren: CheckoutRouteChildren = {
  CheckoutLayoutRoute: CheckoutLayoutRoute,
  CheckoutCartRoute: CheckoutCartRoute,
  CheckoutPaymentRoute: CheckoutPaymentRoute,
}

const CheckoutRouteWithChildren = CheckoutRoute._addFileChildren(
  CheckoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CheckoutRoute: CheckoutRouteWithChildren,
  MenuSlugRoute: MenuSlugRoute,
  MenuIndexRoute: MenuIndexRoute,
  OrdersIndexRoute: OrdersIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
